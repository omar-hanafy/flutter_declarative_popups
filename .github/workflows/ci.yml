name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.1'
          channel: 'stable'

      - name: Install dependencies
        run: |
          flutter pub get
          cd example && flutter pub get

      - name: Check formatting
        run: dart format --set-exit-if-changed .

      - name: Analyze code
        run: flutter analyze

      - name: Check publish readiness
        run: flutter pub publish --dry-run

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: analyze
    
    strategy:
      matrix:
        flutter-version: ['3.32.1']
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          channel: 'stable'

      - name: Install dependencies
        run: |
          flutter pub get
          cd example && flutter pub get

      - name: Run tests
        run: flutter test

      - name: Run tests with coverage
        if: matrix.flutter-version == '3.32.1'
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        if: matrix.flutter-version == '3.32.1'
        uses: codecov/codecov-action@v4
        with:
          file: coverage/lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build-example:
    name: Build Example App
    runs-on: ${{ matrix.os }}
    needs: analyze
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            build-cmd: 'cd example && flutter build apk --debug'
            artifact-name: 'apk'
            artifact-path: 'example/build/app/outputs/flutter-apk/app-debug.apk'
          - os: macos-latest
            build-cmd: 'cd example && flutter build ios --debug --simulator'
            artifact-name: 'ios'
            artifact-path: 'example/build/ios/iphonesimulator/Runner.app'
          - os: windows-latest
            build-cmd: 'cd example && flutter build windows --debug'
            artifact-name: 'windows'
            artifact-path: 'example/build/windows/x64/runner/Debug'
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.1'
          channel: 'stable'

      - name: Install dependencies
        run: |
          flutter pub get
          cd example && flutter pub get

      - name: Build example app
        run: ${{ matrix.build-cmd }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}-debug
          path: ${{ matrix.artifact-path }}
          retention-days: 5

  # Final job to ensure all checks passed
  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [analyze, test, build-example]
    
    steps:
      - name: All checks passed
        run: echo "All CI checks passed successfully!"
