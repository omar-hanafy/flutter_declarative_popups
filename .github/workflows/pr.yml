name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-title:
    name: PR Title Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  changelog:
    name: Changelog Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if CHANGELOG.md is updated
        run: |
          if git diff --name-only origin/main..HEAD | grep -q "CHANGELOG.md"; then
            echo "✅ CHANGELOG.md has been updated"
          else
            echo "⚠️  Warning: CHANGELOG.md has not been updated"
            echo "Please update CHANGELOG.md with your changes"
          fi

  version-check:
    name: Version Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version bump
        run: |
          # Get version from main branch
          git show origin/main:pubspec.yaml | grep "^version:" | awk '{print $2}' > main_version.txt
          # Get version from PR branch
          grep "^version:" pubspec.yaml | awk '{print $2}' > pr_version.txt
          
          echo "Main version: $(cat main_version.txt)"
          echo "PR version: $(cat pr_version.txt)"
          
          if [ "$(cat main_version.txt)" = "$(cat pr_version.txt)" ]; then
            echo "⚠️  Warning: Version has not been bumped"
            echo "Consider updating the version in pubspec.yaml if this PR contains new features or fixes"
          else
            echo "✅ Version has been bumped"
          fi

  label-pr:
    name: Auto Label PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write  # Required to create/manage labels
    
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml

  size-label:
    name: Size Label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write  # Required to create/manage labels
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Add size label
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const additions = pr.additions;
            const deletions = pr.deletions;
            const changes = additions + deletions;
            
            let sizeLabel = '';
            if (changes < 10) {
              sizeLabel = 'size/XS';
            } else if (changes < 30) {
              sizeLabel = 'size/S';
            } else if (changes < 100) {
              sizeLabel = 'size/M';
            } else if (changes < 500) {
              sizeLabel = 'size/L';
            } else {
              sizeLabel = 'size/XL';
            }
            
            // Remove existing size labels
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            for (const label of labels.data) {
              if (label.name.startsWith('size/')) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  name: label.name
                });
              }
            }
            
            // Add new size label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [sizeLabel]
            });
